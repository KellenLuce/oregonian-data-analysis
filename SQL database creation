
CREATE SCHEMA f_proj;


CREATE TABLE f_proj.articles_raw (
	
	headline TEXT,
	author TEXT,
	"label" TEXT,
	date_updated TEXT,
	date_published TEXT,
	share_count TEXT,
	article TEXT

);

COPY f_proj.articles_raw
FROM ''
WITH (FORMAT CSV, HEADER);

COPY f_proj.articles_raw
FROM ''
WITH (FORMAT CSV, HEADER);

CREATE TABLE f_proj.articles_cleaner (
	"id" SERIAL,
	headline TEXT,
	author TEXT,
	author_id INT,
	newspaper TEXT,
	"label" TEXT,
	date_updated TIMESTAMP,
	date_published TIMESTAMP,
	share_count INT,
	article TEXT,
	twitter TEXT
);

/* started cleaning */

BEGIN;

UPDATE f_proj.articles_raw
SET author = ltrim(author, 'By ')
;

COMMIT;


ALTER TABLE f_proj.articles_raw
ADD COLUMN article_id SERIAL;


DELETE FROM f_proj.articles_raw
WHERE article_id NOT IN (
	SELECT MAX(article_id)
	FROM f_proj.articles_raw
	GROUP BY headline, author, "label", date_updated, date_published, share_count, article
	)
;
/* note that above leaves duplicated articles that have two different share_counts. */
/* fixing that data + type */

UPDATE f_proj.articles_raw
SET share_count = 0
WHERE share_count = 'None'
;

ALTER TABLE f_proj.articles_raw
ALTER COLUMN share_count SET DATA TYPE INT USING share_count::INT
;

/* fixing the update + publication dates too */

BEGIN;

UPDATE f_proj.articles_raw
SET date_updated = ltrim(date_updated, 'Updated: ')
;
UPDATE f_proj.articles_raw
SET date_updated = rtrim(date_updated, '|')
;

UPDATE f_proj.articles_raw
SET date_published = ltrim(date_published, 'Published: ')
;

UPDATE f_proj.articles_raw
SET date_updated = NULL
WHERE date_updated = 'None'
;

COMMIT;

BEGIN;

ALTER TABLE f_proj.articles_raw
ALTER COLUMN date_updated SET DATA TYPE TIMESTAMP USING date_updated::timestamp without time zone
;

/* Getting newspaper if different from listed author */
BEGIN;

ALTER TABLE f_proj.articles_raw
ADD COLUMN newspaper TEXT
;

UPDATE f_proj.articles_raw
SET newspaper = regexp_match(author, '\s\|\s([\w\s+]+)');

COMMIT;

BEGIN;
UPDATE f_proj.articles_raw
SET author = (regexp_split_to_array(author, ' \| '))[1];
COMMIT;



/* Getting the following: ERROR:  invalid input syntax for type timestamp: "Nov. 30, 2022, 4:44 p.m." */
/* Shelving correct column types for now */


/* ts column setup */
BEGIN;

ALTER TABLE f_proj.articles_raw
ADD COLUMN article_vec tsvector
;

UPDATE f_proj.articles_raw
SET article_vec = to_tsvector(article);

CREATE INDEX gindex ON f_proj.articles_raw
USING gin(article_vec);

COMMIT;



/* grabbing twitter handles (poorly) */


SELECT regexp_match(article, 'Twitter\s(.{20})') twit, 
regexp_match(article, ';\s(@.{20})') semicolon, 
regexp_match(article, 'Twitter:\s(.{20})') twit_semicolon,
regexp_match(article, ',\s(@.{20})') comma,
regexp_match(article, '\|\s(@.{20})') bar,
regexp_match(article, 'her\s(@.{20})') rose_wong,
regexp_match(article, '\((@.{20})') paren
FROM f_proj.articles_raw
ORDER BY twit, semicolon, twit_semicolon, comma, bar, paren, rose_wong
;



